/*
    https://www.acmicpc.net/problem/11057

    생각
        구할수 있는 가장 작은 수의 예시에서 점화식을 구해보도록 하자
        N=2(2자릿수)일 때 오르막의 수는 

        d[2][0] = { 00 } = 1
        d[2][1] = { 01, 11 } = 2
        d[2][2] = { 02, 12, 22 } = 3
        d[2][3] = { 03, 13, 23, 33 } = 4
        .
        .
        d[2][9] = { 09, 19 ... 89, 99 } = 10
        
        * d[1][0] = {0} 은 두 자릿수에서는 00, 01, 02, 03 .. 09 모든 숫자(10개)에
          들어갈 수 있으므로 d[2][0] .. d[2][9] 까지 모두 들어갈 수 있다.
        * d[1][1] = {1} 은 d[2][1] 두 자릿수에서   X , 11, 12, 13 .. 19 -> 9개
        * d[1][2] = {2} 는 d[2][2] 두 자릿수에서   X , X , 22, 23 .. 29 -> 8개
         
        이것을 반복하는 코드를 구현하면 된다.
*/
#include <iostream>

using namespace std;
int N;
long long d[1001][10];
int main()
{
    cin >> N;
    for(int i=0; i<=9; i++)
        d[1][i] = 1;
    
    for(int i=2; i<=N; i++){
        for(int j=0; j<=9; j++){
            for(int k=0; k<=j; k++){
                d[i][j] = (d[i][j] + d[i-1][k])%10007;
            }
        }
    }
    cout << (d[N][0] + d[N][1] +d[N][2] +d[N][3] +d[N][4] +d[N][5] +
    d[N][6] +d[N][7] +d[N][8] +d[N][9])%10007 << "\n";
}